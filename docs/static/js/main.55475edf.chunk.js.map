{"version":3,"sources":["components/AddCategory/AddCategory.js","helpers/getGifs.js","components/GifGrid/GifGridItem.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","find","x","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGXC,mBADf,IAF0B,mBAGxCC,EAHwC,KAG5BC,EAH4B,KA+B/C,OACG,oCACG,0BAAMC,SAxBS,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAOX,OAJcA,EAAKC,MAAK,SAAAC,GAAC,OAAIA,IAAMT,KAKzB,YAAIO,GAEL,CAAEP,GAAR,mBAAuBO,OAI7BN,EAAc,OAOX,2BAAOS,KAAK,OACTC,MAAOX,EACPY,SA/Bc,SAACT,GACxBF,EAAcE,EAAEU,OAAOF,a,uBCThBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARnB,kBAYbM,GAZa,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACG,oCACG,yBAAKc,UAAU,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,MCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACbhB,mBAAS,CAChCuB,KAAM,GACNa,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAAAC,GACpBH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAGf,CAACpB,IAEGqB,EDZ2BK,CAAa1B,GAAjCa,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAEtB,OACG,oCACG,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aAETH,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEXnCkB,EAAe,WAEzB,IAF+B,EAGK5C,mBADf,CAAC,cAFS,mBAGxB6C,EAHwB,KAGZ9C,EAHY,KAK/B,OACG,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEM8C,EAAWpB,KAAI,SAAAT,GACZ,OACG,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,UCbvD8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.55475edf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n   const initialValue = '';\r\n   const [inputValue, setInputValue] = useState(initialValue);\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value)\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories(cats => {\r\n\r\n            // Guardar las categorias que hay\r\n            const exist = cats.find(x => x === inputValue);\r\n\r\n            // Si existe, devuelte las categorías ya existentes,\r\n            // si no, añade la nueva categoría\r\n            if (exist) {\r\n               return [...cats];\r\n            } else {\r\n               return [inputValue, ...cats];\r\n            }\r\n         });\r\n\r\n         setInputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <form onSubmit={handleSubmit}>\r\n            <input type='text'\r\n               value={inputValue}\r\n               onChange={handleInputChange}></input>\r\n         </form>\r\n      </>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n};","export const getGifs = async (category) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=6q16rM6usThsbu9X2kmpiFrTbcNq4gFN`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n   const gifs = data.map(img => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images.downsized_medium.url\r\n      }\r\n   })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n   return (\r\n      <>\r\n         <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs'\r\nimport { GifGridItem } from '../GifGrid/GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n         {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n         <div className='card-grid'>\r\n            {\r\n               images.map((img) => (\r\n                  <GifGridItem key={img.id} {...img} />\r\n               ))\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifs(category).then(imgs => {\r\n         setState({\r\n            data: imgs,\r\n            loading: false\r\n         })\r\n      })\r\n   }, [category]);\r\n\r\n   return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory/AddCategory';\r\nimport { GifGrid } from './components/GifGrid/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   const initialState = ['Samurai X'];\r\n   const [categories, setCategories] = useState(initialState);\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr></hr>\r\n         <ol>\r\n            {\r\n               categories.map(category => {\r\n                  return (\r\n                     <GifGrid key={category} category={category}></GifGrid>\r\n                  )\r\n               })\r\n            }\r\n         </ol>\r\n      </>\r\n   )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}